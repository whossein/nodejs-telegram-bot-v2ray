// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// prisma migrate dev
// prisma generate
// npx prisma studio

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// enum Role {
//   Normal
//   Normal_Hamkar
//   Admin
//   Test
//   Banned
//   DeActive
// }

model User {
  id             Int         @id @default(autoincrement())
  userName       String?     @unique
  email          String?     @unique
  phoneNumber    String?     @unique
  nationalCode   String?     @unique
  firstName      String?
  lastName       String?
  //role        Role     @default(Normal)
  role           String      @default("Normal") // maybe change to uesr_type
  walletBallance Int         @default(0)
  createdAt      DateTime    @updatedAt //@default(now()) // @db.Timestamp()
  updatedAt      DateTime    @updatedAt //@db.Timestamp()
  deleted        DateTime?
  UserOtp        UserOtp?
  UserTokens     UserTokens?
}

model UserOtp {
  id          Int      @id @default(autoincrement())
  phoneNumber String
  code        String
  isConfirm   Boolean  @default(false)
  expireAt    DateTime //@db.Timestamp()
  user        User?    @relation(fields: [userId], references: [id])
  userId      Int?     @unique
  try         Int      @default(0)
  createdAt   DateTime @updatedAt
  updatedAt   DateTime @updatedAt
}

model UserTokens {
  id        Int      @id @default(autoincrement())
  ip        String?
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
  createdAt DateTime @updatedAt
  updatedAt DateTime @updatedAt
}

// USER_OTP
// USER_PAYMENT
// USER_ADDRESS
// USER_WALLET_TRANSACTION
// PRODUCT
// PRODUCT_CATEGORY
// ORDER_DETAIL
// ORDER_ITEMS
// DISCOUNT_ORDER

// model Profile {
//   id      Int  @id @default(autoincrement())
//   user    User @relation(fields: [user_id], references: [id])
//   user_id Int  @unique
// }

// model Post {
//   id        Int          @id @default(autoincrement())
//   title     String
//   content   String?
//   published Boolean      @default(false)
//   author    User         @relation(fields: [authorId], references: [id])
//   authorId  Int
//   tags      TagOnPosts[]
//   createdAt DateTime     @default(now())
// }

// model Tag {
//   id    Int          @id @default(autoincrement())
//   name  String
//   posts TagOnPosts[]
// }

// model TagOnPosts {
//   // relation scalar field (used in the `@relation` attribute below)
//   post   Post @relation(fields: [postId], references: [id])
//   postId Int

//   // relation scalar field (used in the `@relation` attribute above)
//   tag   Tag @relation(fields: [tagId], references: [id])
//   tagId Int

//   @@id([postId, tagId])
// }
